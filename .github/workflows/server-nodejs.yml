name: Node.js CI/CD API server

on:
  push:
    branches: ["main"]
    paths:
      - .github/workflows/api.node.js.yml
      - server/**
  pull_request:
    branches: ["main"]
    paths:
      - .github/workflows/api.node.js.yml
      - server/**
  workflow_dispatch:

jobs:
  build:
    runs-on: [self-hosted, ci-runner]
    strategy:
      matrix:
        node-version: [20.x]

    defaults:
      run:
        working-directory: server

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          sparse-checkout: "server"

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "none"

      - name: Install dependencies
        run: pnpm install

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: server
          file: server/Dockerfile
          push: true
          tags: devltt404/bullfood-server:latest

  deploy:
    runs-on: [self-hosted, cd-runner]
    needs: build

    defaults:
      run:
        working-directory: server

    steps:
      - name: Create .env file
        run: |
          cat <<EOF > .env
          NODE_ENV=${{ vars.NODE_ENV }}
          SERVER_PORT=${{ vars.SERVER_PORT }}
          CLIENT_BASE_URL=${{ vars.CLIENT_BASE_URL }}
          DB_URI=${{ secrets.DB_URI }}
          REDIS_URI=${{ secrets.REDIS_URI }}
          RABBITMQ_URI=${{ secrets.RABBITMQ_URI }}
          MAIL_SENDER_NAME=${{ secrets.MAIL_SENDER_NAME }}
          MAIL_SENDER_EMAIL=${{ secrets.MAIL_SENDER_EMAIL }}
          MAIL_HOST=${{ secrets.MAIL_HOST }}
          MAIL_PORT=${{ secrets.MAIL_PORT }}
          MAIL_USER=${{ secrets.MAIL_USER }}
          MAIL_PASS=${{ secrets.MAIL_PASS }}
          BC_SESSION_ID=${{ secrets.BC_SESSION_ID }}
          EOF

      - name: Pull the latest image
        run: |
          docker pull devltt404/bullfood-server:latest

      - name: Stop and remove any existing containers
        run: |
          docker stop bullfood-server || true
          docker rm bullfood-server || true

      - name: Run Docker container
        run: |
          docker run -d \
            --name bullfood-server \
            --env-file .env \
            -p 4000:4000 \
            devltt404/bullfood-server:latest
